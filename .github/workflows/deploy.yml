name: Deploy to Railway

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
    
    - name: Cache uv dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/uv
        key: ${{ runner.os }}-uv-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-uv-
    
    - name: Install dependencies
      run: |
        uv pip install --system -r requirements.txt
    
    - name: Check code formatting
      run: |
        python -m py_compile app.py
        python -m py_compile rag_pipeline.py
        python -m py_compile build_index.py
    
    - name: Test imports
      run: |
        python -c "import app; print('App imports successfully')"
        python -c "import rag_pipeline; print('RAG pipeline imports successfully')"
        python -c "import build_index; print('Build index imports successfully')"

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to Railway
      uses: railway-tools/gh-action@v1
      with:
        railway_token: ${{ secrets.RAILWAY_TOKEN }}
        service_name: "nitk-advisor"
      env:
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        LLM_PROVIDER: ${{ secrets.LLM_PROVIDER }}
        LLM_MODEL: ${{ secrets.LLM_MODEL }}
        FLASK_ENV: "production"
        DEBUG: "False"